<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fi.fta.digitraffic</groupId>
    <artifactId>marine</artifactId>
    <version>1.27.0</version>
    <packaging>jar</packaging>

    <name>dt-marine</name>
    <description>Digitraffic Marine</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <ch.qos.logback.version>1.2.3</ch.qos.logback.version>
        <jackson.dataformat.version>2.9.6</jackson.dataformat.version>
    </properties>

    <repositories>
        <repository>
            <id>repository.spring.milestone</id>
            <name>Spring Milestone Repository</name>
            <url>http://repo.spring.io/milestone</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <url>http://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- *** https://github.com/logstash/logstash-logback-encoder#including-it-in-your-project *** -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${ch.qos.logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${ch.qos.logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-access</artifactId>
                <version>${ch.qos.logback.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!-- *** https://github.com/logstash/logstash-logback-encoder#including-it-in-your-project *** -->

    <dependencies>
        <dependency>
            <groupId>org.glassfish.tyrus.bundles</groupId>
            <artifactId>tyrus-standalone-client</artifactId>
            <version>1.13.1</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.1.2</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-mqtt</artifactId>
        </dependency>

        <!--= Compile/Provided/Runtime/System dependencies, in groupId alphabethic order =-->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.dataformat.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${jackson.dataformat.version}</version>
        </dependency>

        <!-- Static Reader of META-INF/MANIFEST.MF Files -->
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-manifests</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- Swagger2 JSON API specification generation-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.7.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.4</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-properties-migrator</artifactId>
        </dependency>

        <!-- Spring Boot Actuator for health page -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>3.5.2</version>
        </dependency>

        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>1.1.0</version>
        </dependency>

        <!-- Includes spring's support classes for quartz -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>

        <dependency>
            <groupId>org.osgeo</groupId>
            <artifactId>proj4j</artifactId>
            <version>0.1.0</version>
        </dependency>

        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>2.3</version>
        </dependency>

        <!-- Logging in JSON format for ELK-stack -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>5.1</version>
        </dependency>

        <!-- gzipped http response -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.6</version>
        </dependency>

        <!-- Test dependencies, in groupId alphabethic order -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- If you have access to scm then you can place actual url's.
         Otherwise with <revisionOnScmFailure /> you can give some fake URLs as follows. -->
    <scm>
        <connection>scm:git:http://none</connection>
        <developerConnection>scm:git:https://none</developerConnection>
        <url>scm:git:https://none</url>
    </scm>

    <build>
        <plugins>
            <plugin>
                <groupId>org.openclover</groupId>
                <artifactId>clover-maven-plugin</artifactId>
                <version>4.2.1</version>
                <configuration>
                    <excludes>
                        <exclude>fi/livi/digitraffic/meri/domain/**/*.java</exclude>
                        <exclude>fi/livi/digitraffic/meri/quartz/**/*.java</exclude>
                        <exclude>fi/livi/digitraffic/meri/model/**/*.java</exclude>
                        <exclude>fi/livi/digitraffic/meri/config/**/*.java</exclude>
                        <exclude>fi/livi/digitraffic/meri/aop/**/*.java</exclude>
                        <exclude>**/dto/**/*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>3.3.1</version>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- generate build number -->
            <!--<plugin>-->
                <!--<groupId>org.codehaus.mojo</groupId>-->
                <!--<artifactId>buildnumber-maven-plugin</artifactId>-->
                <!--<version>1.4</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>generate-buildNumber</id>-->
                        <!--<phase>validate</phase>-->
                        <!--<goals>-->
                            <!--<goal>create</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<doCheck>false</doCheck>-->
                    <!--<doUpdate>false</doUpdate>-->
                    <!--&lt;!&ndash; This ensures that even if we are not connected to scm the revision is generated &ndash;&gt;-->
                    <!--<revisionOnScmFailure />-->
                    <!--<format>{0}</format>-->
                    <!--&lt;!&ndash;<format>{0,date,yyyy-MM-dd_HH:mm:ss}</format>&ndash;&gt;-->
                    <!--<items>-->
                        <!--&lt;!&ndash;<item>timestamp</item>&ndash;&gt;-->
                        <!--<item>buildNumber</item>-->
                    <!--</items>-->
                <!--</configuration>-->
            <!--</plugin>-->


<!--
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.4</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>validate-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>

                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
                    <dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
                    &lt;!&ndash; false is default here, it prints some more information during the build &ndash;&gt;
                    <verbose>false</verbose>
                    &lt;!&ndash; this is false by default, forces the plugin to generate the git.properties file &ndash;&gt;
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <format>properties</format>
                    <skipPoms>true</skipPoms>
                    <injectAllReactorProjects>false</injectAllReactorProjects>
                    <failOnNoGitDirectory>true</failOnNoGitDirectory>
                    <failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
                    <skip>false</skip>
                    <runOnlyOnce>false</runOnlyOnce>
                    <excludeProperties>
                        &lt;!&ndash; <excludeProperty>git.user.*</excludeProperty> &ndash;&gt;
                    </excludeProperties>
                    <includeOnlyProperties>
                        &lt;!&ndash; <includeOnlyProperty>^git.commit.id.full$</includeOnlyProperty> &ndash;&gt;
                    </includeOnlyProperties>
                    <useNativeGit>false</useNativeGit>
                    <abbrevLength>7</abbrevLength>
                    <commitIdGenerationMode>flat</commitIdGenerationMode>
                    <gitDescribe>
                        &lt;!&ndash; don't generate the describe property &ndash;&gt;
                        <skip>false</skip>
                        &lt;!&ndash; if no tag was found "near" this commit, just print the commit's id instead, helpful when you always expect this field to be not-empty &ndash;&gt;
                        <always>false</always>
                        &lt;!&ndash; how many chars should be displayed as the commit object id? 7 is git's default, 0 has a special meaning (see end of this README.md), and 40 is the maximum value here &ndash;&gt;
                        <abbrev>7</abbrev>
                        &lt;!&ndash; when the build is triggered while the repo is in "dirty state", append this suffix &ndash;&gt;
                        <dirty>-dirty</dirty>
                        &lt;!&ndash; Only consider tags matching the given pattern. This can be used to avoid leaking private tags from the repository. &ndash;&gt;
                        <match>*</match>
                        &lt;!&ndash; always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag. The distance will always be 0 if you're "on" the tag. &ndash;&gt;
                        <forceLongFormat>false</forceLongFormat>
                    </gitDescribe>
                </configuration>
            </plugin>
-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>fi.livi.digitraffic.meri.MarineApplication</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Build>${buildNumber}</Implementation-Build>
                            <MarineApplication-Version>${project.version}</MarineApplication-Version>
                            <MarineApplication-Build>${buildNumber}</MarineApplication-Build>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-xjc-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <extensions>
                        <extension>org.apache.cxf.xjcplugins:cxf-xjc-dv:3.0.5</extension>
                    </extensions>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>xsdtojava</goal>
                        </goals>
                        <configuration>
                            <sourceRoot>${project.build.directory}/generated-sources/cxf</sourceRoot>
                            <xsdOptions>
                                <xsdOption>
                                    <xsd>${basedir}/src/main/resources/portnet/PortnetTypes.xsd</xsd>
                                    <packagename>fi.livi.digitraffic.meri.portnet.xsd</packagename>
                                </xsdOption>
                                <xsdOption>
                                    <xsd>${basedir}/src/main/resources/portnet/vesseldetails/VesselDetails.xsd</xsd>
                                    <packagename>fi.livi.digitraffic.meri.portnet.vesseldetails.xsd</packagename>
                                </xsdOption>
                                <xsdOption>
                                    <xsd>${basedir}/src/main/resources/portnet/vesseldetails/PortnetTypes.xsd</xsd>
                                    <packagename>fi.livi.digitraffic.meri.portnet.vesseldetails.xsd</packagename>
                                </xsdOption>
                            </xsdOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>3.2.5</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceRoot>${project.build.directory}/generated-sources/cxf</sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/main/resources/winternavigation/Baltice.wsdl</wsdl>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
