package fi.livi.digitraffic.meri.model.ais;

import io.swagger.annotations.ApiModelProperty;

public interface VesselLocationJson {
    @ApiModelProperty(value = "Maritime Mobile Service Identity", required = true)
    int getMmsi();

    @ApiModelProperty(value = "X-coordinate (longitude) in ETRS89 (EUREF-FIN)", required = true)
    double getX();

    @ApiModelProperty(value = "Y-coordinate (latitude) in ETRS89 (EUREF-FIN)", required = true)
    double getY();

    @ApiModelProperty(value = "Speed over ground in 1/10 knot steps ", allowableValues = "range[0,1022]", required = true)
    double getSog();

    @ApiModelProperty(value = "Course over ground in 1/10 = (0-3599). 3600 = not available", allowableValues = "range[0,3600]", required = true)
    double getCog();

    @ApiModelProperty(value = "Navigational status", allowableValues = "range[0,15]", required = true)
    int getNavStat();

    @ApiModelProperty(value = "Rate of turn", allowableValues = "range[-128,127]", required = true)
    int getRot();

    @ApiModelProperty(value = "Position accuracy, 1 = high, 0 = low", allowableValues = "0, 1", required = true)
    boolean isPosAcc();

    @ApiModelProperty(value = "Receiver autonomous integrity monitoring (RAIM) flag of electronic position fixing device", allowableValues = "0, 1", required = true)
    boolean isRaim();

    @ApiModelProperty(value = "Degrees (0-359) (511 indicates not available = default)", allowableValues = "range[0,359], 511", required = false)
    Integer getHeading();

    @ApiModelProperty(value = "UTC second when the report was generated by the electronic position system", allowableValues = "range[0,59],60,61,62,63", required = true)
    long getTimestamp();

    @ApiModelProperty(value = "Location record timestamp in milliseconds from Unix epoch.", required = true)
    long getTimestampExternal();
}
